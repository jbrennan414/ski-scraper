# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      #- name: Make project
        #run: |
          #cd ..
          #ls -lh

      - name: Delete repo...start from scratch
        uses: appleboy/ssh-action@master
        with:
          host: 104.248.3.8
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.KEY }}
          port: 22
          script: |
           cd projects/
           rm -rf ski-scraper
           mkdir ski-scraper
           cd ~
#           pm2 stop api
#          pm2 delete api
 #          pm2 stop ski-scraper
  #         pm2 delete ski-scraper

      - name: Copy worker
        # You may pin to the exact commit or the version.
        # uses: horochx/deploy-via-scp@bf9a636d9a475a714e375ba1cc455d1c5c861aef
        uses: horochx/deploy-via-scp@v1.0.1
        with:
           # Local file path
           local: worker/
           # Remote file path
           remote: ~/projects/ski-scraper
           # Remote server address
           host: 104.248.3.8
           # Remote server port
           port: 22
           # Remote server user
           user: ${{ secrets.SSH_USER }}
           # Remote server private key
           key: ${{ secrets.KEY }}
     
      - name: Copy api  
        # You may pin to the exact commit or the version.
        # uses: horochx/deploy-via-scp@bf9a636d9a475a714e375ba1cc455d1c5c861aef
        uses: horochx/deploy-via-scp@v1.0.1
        with:
           # Local file path
           local: api/
           # Remote file path
           remote: ~/projects/ski-scraper
           # Remote server address
           host: 104.248.3.8
           # Remote server port
           port: 22
           # Remote server user
           user: ${{ secrets.SSH_USER }}
           # Remote server private key
           key: ${{ secrets.KEY }}
           
      - name: Copy package.json  
        # You may pin to the exact commit or the version.
        # uses: horochx/deploy-via-scp@bf9a636d9a475a714e375ba1cc455d1c5c861aef
        uses: horochx/deploy-via-scp@v1.0.1
        with:
           # Local file path
           local: package.json
           # Remote file path
           remote: ~/projects/ski-scraper/package.json
           # Remote server address
           host: 104.248.3.8
           # Remote server port
           port: 22
           # Remote server user
           user: ${{ secrets.SSH_USER }}
           # Remote server private key
           key: ${{ secrets.KEY }}
       
      - name: Copy telegrambot.js
        # You may pin to the exact commit or the version.
        # uses: horochx/deploy-via-scp@bf9a636d9a475a714e375ba1cc455d1c5c861aef
        uses: horochx/deploy-via-scp@v1.0.1
        with:
           # Local file path
           local: telegrambot.js
           # Remote file path
           remote: ~/projects/ski-scraper/telegrambot.js
           # Remote server address
           host: 104.248.3.8
           # Remote server port
           port: 22
           # Remote server user
           user: ${{ secrets.SSH_USER }}
           # Remote server private key
           key: ${{ secrets.KEY }}


      - name: Fire up new repo
        uses: appleboy/ssh-action@master
        with:
          host: 104.248.3.8
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.KEY }}
          port: 22
          script: |
           cd projects/ski-scraper
           npm i
           pm2 flush logs
           pm2 start api/index.js --name api
           pm2 start worker/index.js --name ski-scraper
           
